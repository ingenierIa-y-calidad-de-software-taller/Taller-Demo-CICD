name: CI Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build with Maven
      run: mvn clean package
      working-directory: ci-taller-demo

    - name: SonarCloud Scan
      run: |
        mvn clean verify sonar:sonar \
        -Dsonar.projectKey=ingenierIa-y-calidad-de-software-taller_Taller-Demo-CICD \
        -Dsonar.token=${SONAR_TOKEN} \
        -Dsonar.host.url=https://sonarcloud.io \
        -X
      working-directory: ci-taller-demo

    - name: Smoke tests summary
      run: |
        echo "==== Prueba de humo (DemoApplicationTests) ====" > test_result_summary.txt
        if [ -f ci-taller-demo/target/surefire-reports/com.example.demo.DemoApplicationTests.txt ]; then
            grep "Tests run:" ci-taller-demo/target/surefire-reports/com.example.demo.DemoApplicationTests.txt >> test_result_summary.txt
        else
            echo "No se encontraron resultados." >> test_result_summary.txt
        fi
        echo "" >> test_result_summary.txt
        echo "==== Resultado HelloWorldControllerTest ====" >> test_result_summary.txt
        if [ -f ci-taller-demo/target/surefire-reports/com.example.demo.controllers.HelloWorldControllerTest.txt ]; then
            grep "Tests run:" ci-taller-demo/target/surefire-reports/com.example.demo.controllers.HelloWorldControllerTest.txt >> test_result_summary.txt
        else
            echo "No se encontraron resultados." >> test_result_summary.txt
        fi

    - name: Desplegar manualmente
      if: github.event_name == 'workflow_dispatch'
      run: |
        docker stop demo-app || true
        docker rm demo-app || true
        docker rmi demo-app || true
        docker build -t demo-app .
        docker run -d --name demo-app -p 8082:8080 demo-app
      working-directory: ci-taller-demo

    - name: Notificación Telegram - éxito
      if: success()
      run: |
        MESSAGE="✅  Éxito: Pipeline completado correctamente en GitHub Actions.%0A$(cat test_result_summary.txt)"
        curl -s -X POST "https://api.telegram.org/bot${BOT_TOKEN}/sendMessage" \
        -d chat_id=${CHAT_ID} \
        -d text="${MESSAGE}"

    - name: Notificación Telegram - error
      if: failure()
      run: |
        MESSAGE="❌  Error: Falló el pipeline en GitHub Actions.%0A"
        if [ -f test_result_summary.txt ]; then
          MESSAGE+="$(cat test_result_summary.txt)"
        else
          MESSAGE+="Sin resultados."
        fi
        curl -s -X POST "https://api.telegram.org/bot${BOT_TOKEN}/sendMessage" \
        -d chat_id=${CHAT_ID} \
        -d text="${MESSAGE}"
